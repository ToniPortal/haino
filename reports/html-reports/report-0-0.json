{"info":{"type":"runner","start":"2024-04-26T10:40:35.754Z","end":"2024-04-26T10:40:37.170Z","_duration":1416,"cid":"0-0","capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"124.0.6367.49","chrome":{"chromedriverVersion":"124.0.6367.49 (0bf565652930c26d369595856eae6d4576e48b59-refs/branch-heads/6367@{#763})","userDataDir":"C:\\Users\\g2r\\AppData\\Local\\Temp\\scoped_dir9156_398537985"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:50718"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"wdio:driverPID":9156,"sessionId":"23101296b99b694ddfcd57bae0bd184c"},"sanitizedCapabilities":"chrome.124_0_6367_49.windows","config":{"protocol":"http","hostname":"0.0.0.0","path":"/","capabilities":{"browserName":"chrome","wdio:electronServiceOptions":{"appBinaryPath":"./build/Haino-win32-x64/Haino.exe","appArgs":[]},"goog:chromeOptions":{"binary":"./build/Haino-win32-x64/Haino.exe","windowTypes":["app","webview"],"args":[]},"browserVersion":"124.0.6367.49"},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\g2r\\AppData\\Local\\Temp","port":50713,"requestedCapabilities":{"browserName":"chrome","wdio:electronServiceOptions":{"appBinaryPath":"./build/Haino-win32-x64/Haino.exe","appArgs":[]},"goog:chromeOptions":{"binary":"./build/Haino-win32-x64/Haino.exe","windowTypes":["app","webview"],"args":[]},"browserVersion":"124.0.6367.49"},"automationProtocol":"webdriver","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[null],"rootDir":"C:\\Users\\g2r\\Documents\\Github\\Haino","specs":["./test/wdio/**/*.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec","json","html-nice"],"services":["electron"],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[null],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null,null],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":["run","run"],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","config-path":"wdio.conf.js","ignoredWorkerServices":[]},"specs":["file:///C:/Users/g2r/Documents/Github/Haino/test/wdio/electron.test.js"],"sessionId":"23101296b99b694ddfcd57bae0bd184c","isMultiremote":false,"instanceOptions":{"23101296b99b694ddfcd57bae0bd184c":{"protocol":"http","hostname":"0.0.0.0","path":"/","capabilities":{"browserName":"chrome","wdio:electronServiceOptions":{"appBinaryPath":"./build/Haino-win32-x64/Haino.exe","appArgs":[]},"goog:chromeOptions":{"binary":"./build/Haino-win32-x64/Haino.exe","windowTypes":["app","webview"],"args":[]},"browserVersion":"124.0.6367.49"},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\g2r\\AppData\\Local\\Temp","port":50713,"requestedCapabilities":{"browserName":"chrome","wdio:electronServiceOptions":{"appBinaryPath":"./build/Haino-win32-x64/Haino.exe","appArgs":[]},"goog:chromeOptions":{"binary":"./build/Haino-win32-x64/Haino.exe","windowTypes":["app","webview"],"args":[]},"browserVersion":"124.0.6367.49"},"automationProtocol":"webdriver","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[null],"rootDir":"C:\\Users\\g2r\\Documents\\Github\\Haino","specs":["./test/wdio/**/*.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec","json","html-nice"],"services":["electron"],"maxInstances":10,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[null],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null,null],"afterTest":[],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":["run","run"],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","config-path":"wdio.conf.js","ignoredWorkerServices":[]}},"retry":0,"failures":0,"retries":0},"metrics":{"passed":2,"skipped":0,"failed":0,"duration":1416,"start":"2024-04-26T10:40:35.755Z","end":"2024-04-26T10:40:37Z"},"title":"Test Report Title","suites":[{"type":"suite:start","start":"2024-04-26T10:40:35.772Z","end":"2024-04-26T10:40:36.906Z","_duration":1134,"uid":"suite-0-0","cid":"0-0","file":"C:\\Users\\g2r\\Documents\\Github\\Haino\\test\\wdio\\electron.test.js","title":"Electron Testing","fullTitle":"Electron Testing","tests":[{"type":"test","start":"2024-04-26T10:40:35.774Z","end":"2024-04-26T10:40:35.819Z","_duration":45,"uid":"test-00-0","cid":"0-0","title":"should print and verify the application title ","fullTitle":"Electron Testing.should print and verify the application title ","output":[],"retries":0,"parent":"Electron Testing","state":"passed","body":"async () => {\n    let b = await _globals.browser.getTitle();\n    // console.log('Salut ', b)\n    expect(b).toEqual(\"Haino\");\n  }","events":[],"errorIndex":0},{"type":"test","start":"2024-04-26T10:40:35.820Z","end":"2024-04-26T10:40:36.905Z","_duration":1085,"uid":"test-00-1","cid":"0-0","title":"should write to the commandInput and retrieve info message","fullTitle":"Electron Testing.should write to the commandInput and retrieve info message","output":[],"retries":0,"parent":"Electron Testing","state":"passed","body":"async () => {\n    await _globals.browser.waitUntil(async () => {\n      const readyState = await _globals.browser.execute(() => document.readyState);\n      return readyState === 'complete';\n    });\n\n    // Ensuite, écrire \"/hpm\" dans le champ d'entrée avec l'ID \"commandInput\"\n    await _globals.browser.execute(() => {\n      const commandInput = document.getElementById('commandInput');\n      commandInput.value = \"/hpm\";\n      const event = new Event('keyup', {\n        bubbles: true\n      });\n      commandInput.dispatchEvent(event);\n    });\n    await _globals.browser.pause(1000);\n\n    // Retrieve the content of the paragraph with id \"info\"\n    const infoMessage = await _globals.browser.execute(() => {\n      return document.getElementById('info').innerText;\n    });\n    console.log(\"INFOMESSAGE\", infoMessage);\n\n    // Assert that the retrieved message matches the expected result\n    expect(infoMessage).toContain('Searching');\n  }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2024-04-26T10:40:35.774Z","end":"2024-04-26T10:40:35.819Z","_duration":45,"uid":"test-00-0","cid":"0-0","title":"should print and verify the application title ","fullTitle":"Electron Testing.should print and verify the application title ","output":[],"retries":0,"parent":"Electron Testing","state":"passed","body":"async () => {\n    let b = await _globals.browser.getTitle();\n    // console.log('Salut ', b)\n    expect(b).toEqual(\"Haino\");\n  }","events":[],"errorIndex":0},{"type":"test","start":"2024-04-26T10:40:35.820Z","end":"2024-04-26T10:40:36.905Z","_duration":1085,"uid":"test-00-1","cid":"0-0","title":"should write to the commandInput and retrieve info message","fullTitle":"Electron Testing.should write to the commandInput and retrieve info message","output":[],"retries":0,"parent":"Electron Testing","state":"passed","body":"async () => {\n    await _globals.browser.waitUntil(async () => {\n      const readyState = await _globals.browser.execute(() => document.readyState);\n      return readyState === 'complete';\n    });\n\n    // Ensuite, écrire \"/hpm\" dans le champ d'entrée avec l'ID \"commandInput\"\n    await _globals.browser.execute(() => {\n      const commandInput = document.getElementById('commandInput');\n      commandInput.value = \"/hpm\";\n      const event = new Event('keyup', {\n        bubbles: true\n      });\n      commandInput.dispatchEvent(event);\n    });\n    await _globals.browser.pause(1000);\n\n    // Retrieve the content of the paragraph with id \"info\"\n    const infoMessage = await _globals.browser.execute(() => {\n      return document.getElementById('info').innerText;\n    });\n    console.log(\"INFOMESSAGE\", infoMessage);\n\n    // Assert that the retrieved message matches the expected result\n    expect(infoMessage).toContain('Searching');\n  }","events":[],"errorIndex":0}]}],"reportFile":"C:\\Users\\g2r\\Documents\\Github\\Haino\\reports\\html-reports\\report-0-0.html","browserName":"not specified"}