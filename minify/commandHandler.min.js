"use strict";const e=require("fs").promises,r=require("path"),n=document.getElementById("info"),o=document.getElementById("text"),a="Enter";let t,m=[];const i=[];const c=async()=>{try{const a=(await e.readdir(r.join(__dirname,"../main/plugin"))).filter((e=>"error.js"!==e)),c=[];await Promise.all(a.map((async n=>{const o=await async function(n){const o=r.join(__dirname,`../main/plugin/${n}/commands.json`);try{const r=await e.readFile(o,"utf8");return{name:n,data:JSON.parse(r)}}catch(r){console.warn(`Erreur lors de la lecture du fichier JSON pour le plugin ${n}:`,r);const a=[{primaryText:"<infotext>",command:"/hain <nameofjsfile>"},{primaryText:"<infotexte>",command:"/hain <nameoffjsfile>"}];try{await e.writeFile(o,JSON.stringify(a,null,2),"utf8")}catch(e){console.error(`Erreur lors de l'écriture du fichier JSON par défaut pour le plugin ${n}:`,e)}return{name:n,data:a}}}(n);o&&c.push(o)})));const l=c.map((async e=>{const n=r.join(__dirname,`../main/plugin/${e.name}/commands`),o=[];return await Promise.all(e.data.map((async e=>{let a=e.command.split(" ")[1];a||(a=e.command.slice(1));let t=!1;e.commandType&&(t=!0);let m=!1;e.key&&(m=e.key);try{i.push(e.command);const c={msg:"Module chargé avec succès.",module:require(r.join(n,`${a}.js`)),error:null,command:e.command,primaryText:e.primaryText,commandType:t,key:m};o.push(c)}catch(n){const a={msg:"Erreur lors du chargement du module.",module:require(r.join(__dirname,"../main/plugin/error.js")),command:e.command,primaryText:"Erreur lors du chargement du module.",error:n};o.push(a)}}))),{name:e.name,plugin:o}}));m=await Promise.all(l),console.log("commandModules",m),t=`${i.join("\n")}`,n.innerText="",o.innerText=t}catch(e){console.error("Erreur lors de la lecture des plugins :",e)}};c(),module.exports={handleInput:async function(e){const r=e.target.value;try{if("ArrowUp"===e.key||"ArrowDown"===e.key){const n=o.innerText.split("\n");let a=n.indexOf(r);return-1===a&&(a=0),a+="ArrowUp"===e.key?-1:1,a=Math.min(Math.max(a,0),n.length-1),void(e.target.value=n[a])}for(const i of m)for(const m of i.plugin)m.command.trim()===r.trim()&&!0===m.commandType?m.error?m.module.run(m.error):(console.log("Commands",m.command.trim()),n.innerText=m.primaryText,e.key===a&&m.module.run(r,o)):m.command.split(" ")[0]===r.split(" ")[0]&&!1===m.commandType?m.error?m.module.run(m.error):(n.innerText=m.primaryText,e.key===a&&0==m.key?m.module.run(r,o):1==m.key&&m.module.run(r,o,e.key)):"Backspace"==e.key&&"Enter"!=e.key&&(n.innerText="",o.innerText=t)}catch(e){console.error("Erreur lors de la lecture du fichier JSON :",e)}},loadData:c};
