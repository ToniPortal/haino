/**
 * Module '../main/commandHandler' contains the 'handleInput' function responsible for processing user input.
 * @module main/commandHandler
 * @see ../main/commandHandler.js
 */
const { handleInput } = require('./commandHandler');

/**
 * Attaches an event listener to the input field with the id 'commandInput'.
 * When a key is pressed and released in the input field, the 'handleInput' function is called with the event object as its argument.
 * @function
 * @name handleInputEvent
 * @param {Event} event - The event object generated by the 'keyup' event.
 */
const handleInputEvent = (event) => {
  // Call the 'handleInput' function from the commandHandler module, passing the event object as an argument
  handleInput(event);
};

/**
 * Executes the provided function when the window is fully loaded.
 * Finds the input field element with the id 'commandInput'.
 * Adds an event listener to the input field for the 'keyup' event.
 * @function
 * @name windowOnLoad
 */
window.onload = function () { // eslint-disable-line func-names
  // Retrieve the input field element with the id 'commandInput'
  const ino = document.getElementById('commandInput');

  // Add an event listener to the input field for the 'keyup' event
  ino.addEventListener('keyup', handleInputEvent);
};
